---
# Install Git from custom repo

- name: Check Git version.
  shell: >
    set -o pipefail && git --version |
    grep -Eo "[0-9]{1,}(\.[0-9]{1,}){0,}" | head -n1
  args:
    executable: /usr/bin/bash
  changed_when: false
  failed_when: false
  register: git_curr_ver

- name: Filter current version stdout.
  set_fact:
    current_ver: '{{ git_curr_ver.stdout |
      regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: git_curr_ver.rc == 0

- name: Filter min Git version.
  set_fact:
    min_ver: '{{ git_min_ver | regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: git_min_ver is defined

- name: Ensure Git apt repository is present.
  apt_repository:
    repo: ppa:git-core/ppa
    state: present
    update_cache: true
    codename: "{{ 'focal' if ansible_distribution_release == 'uma' }}"
  become: true
  register: repo

- name: Remove old Git package.
  apt:
    name: git
    state: absent
  become: true
  when: >
    current_ver is defined and min_ver is defined
    and current_ver is version(min_ver, '<', version_type='strict')

- name: Ensure Git is installed.
  apt:
    name: git
    state: >-
      {{ 'latest' if (update_apps is defined and
      ('all' in update_apps or 'git' in update_apps)) else 'present' }}
  become: true
