---
# Install Kubectl

- name: Check Kubectl version.
  shell: >
    set -o pipefail && kubectl version --client --short |
    grep -Eo "[0-9]{1,}(\.[0-9]{1,}){0,}" | head -n1
  args:
    executable: /usr/bin/bash
  changed_when: false
  failed_when: false
  register: kubectl_curr_ver

- name: Filter current version stdout.
  set_fact:
    kubectl_current_ver: '{{ kubectl_curr_ver.stdout |
    regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: kubectl_curr_ver.rc == 0

- name: Filter desired Kubectl version.
  set_fact:
    kubectl_desired_ver: '{{ kubectl_ver |
    regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: kubectl_ver is defined

- block:
    - name: Ensure the Kubernetes apt repository dependencies are installed.
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
        state: present
      become: true

    - name: Add Google Cloud public signing key.
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
        keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg
      become: true

    - name: Add the Kubernetes apt repository.
      apt_repository:
        repo: >
          deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg]
          https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        update_cache: true
      become: true

    - name: Install Kubectl.
      apt:
        name: "{{ 'kubectl=' + kubectl_desired_ver + '-00'
        if kubectl_desired_ver is defined else 'kubectl' }}"
        state: >-
          {{ 'latest' if kubectl_desired_ver is not defined
          and update_apps is defined
          and ('all' in update_apps or 'kubectl' in update_apps)
          else 'present' }}
        force: true
      become: true

  when: >
    kubectl_curr_ver.rc !=0
    or (kubectl_desired_ver is defined
    and kubectl_current_ver is
    version(kubectl_desired_ver, '!=', version_type='strict'))
    or (update_apps is defined
    and ('all' in update_apps or 'kubectl' in update_apps))
