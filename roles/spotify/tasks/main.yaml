---
# Install Spotify-tui

- block:
    - name: Check Spotifyd version.
      shell: >
        set -o pipefail && \. ~/.profile ; spotifyd --version |
        grep -Eo "[0-9]{1,}(\.[0-9]{1,}){0,}" | head -n1
      args:
        executable: /usr/bin/bash
      changed_when: false
      failed_when: false
      register: spotifyd_curr_ver

    - name: Filter current Spotifyd version stdout.
      set_fact:
        current_spotifyd_ver: '{{ spotifyd_curr_ver.stdout |
        regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
      when: spotifyd_curr_ver.rc == 0

    - name: Filter desired Spotifyd version.
      set_fact:
        desired_spotifyd_ver: '{{ spt_spotifyd_ver |
        regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
      when: spt_spotifyd_ver is defined

    - block:
        - name: Ensure all dependencies are installed.
          apt:
            name:
              - libpulse-dev
            state: present
          become: true

        - block:
            - name: Ensure pip3 is installed.
              apt:
                name: python3-pip
                state: present
              become: true

            - name: Ensure required python module is installed.
              pip:
                name: github3.py

            - name: Get latest release tag.
              community.general.github_release:
                user: Spotifyd
                repo: spotifyd
                action: latest_release
              register: spotifyd_latest_release

            - name: Filter release number.
              set_fact:
                spotifyd_latest_release_tag: '{{ spotifyd_latest_release.tag |
                regex_search("([0-9]{1,}\.)+[0-9]{1,}") }}'

          when: spt_spotifyd_ver is not defined

        - name: Define release number.
          set_fact:
            spotifyd_release_num: '{{ desired_spotifyd_ver
            if desired_spotifyd_ver is defined
            else spotifyd_latest_release_tag }}'

        - block:
            - name: Ensure the installation path directory exists.
              file:
                path: "{{ spt_install_path | default('/usr/local') }}/bin"
                state: directory
                mode: 0755

          rescue:
            - name: 'Ensure the installation path directory exists as root
              if first attempt failed.'
              file:
                path: "{{ spt_install_path | default('/usr/local') }}/bin"
                state: directory
                mode: 0755
              become: true

        - name: Get directory status.
          stat:
            path: "{{ spt_install_path | default('/usr/local') }}/bin"
          register: spt_dirstatus

        - name: Download and extract the archive.
          unarchive:
            src: "https://github.com/Spotifyd/spotifyd/releases/download/\
            v{{ spotifyd_release_num }}/spotifyd-linux-full.tar.gz"
            dest: "{{ spt_install_path | default('/usr/local') }}/bin"
            remote_src: true
          become: '{{ not spt_dirstatus.stat.writeable | default(false) }}'

      when: >
        spotifyd_curr_ver.rc != 0
        or (desired_spotifyd_ver is defined
        and current_spotifyd_ver is version(desired_spotifyd_ver, '!=',
        version_type='strict'))
        or (update_apps is defined
        and ('all' in update_apps or 'spotifyd' in update_apps))

  when: spt_install_spotifyd is defined and spt_install_spotifyd is true

- name: Check Spotify-tui version.
  shell: >
    set -o pipefail && \. ~/.profile ; spt --version |
    grep -Eo "[0-9]{1,}(\.[0-9]{1,}){0,}" | head -n1
  args:
    executable: /usr/bin/bash
  changed_when: false
  failed_when: false
  register: spt_curr_ver

- name: Filter current version stdout.
  set_fact:
    spt_current_ver: '{{ spt_curr_ver.stdout |
    regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: spt_curr_ver.rc == 0

- name: Filter desired Spotify-tui version.
  set_fact:
    spt_desired_ver: '{{ spt_ver |
    regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: spt_ver is defined

- block:
    - block:
        - name: Ensure pip3 is installed.
          apt:
            name: python3-pip
            state: present
          become: true

        - name: Ensure required python module is installed.
          pip:
            name: github3.py

        - name: Get latest release tag.
          community.general.github_release:
            user: Rigellute
            repo: spotify-tui
            action: latest_release
          register: spt_latest_release

        - name: Filter release number.
          set_fact:
            spt_latest_release_tag: '{{ spt_latest_release.tag |
            regex_search("([0-9]{1,}\.)+[0-9]{1,}") }}'

      when: spt_ver is not defined

    - name: Define release number.
      set_fact:
        spt_release_num: '{{ spt_desired_ver if spt_desired_ver is defined
        else spt_latest_release_tag }}'

    - block:
        - name: Ensure the installation path directory exists.
          file:
            path: "{{ spt_install_path | default('/usr/local') }}/bin"
            state: directory
            mode: 0755

      rescue:
        - name: 'Ensure the installation path directory exists as root
            if first attempt failed.'
          file:
            path: "{{ spt_install_path | default('/usr/local') }}/bin"
            state: directory
            mode: 0755
          become: true

    - name: Get directory status.
      stat:
        path: "{{ spt_install_path | default('/usr/local') }}/bin"
      register: spt_dirstatus

    - name: Download and extract the archive.
      unarchive:
        src: "https://github.com/Rigellute/spotify-tui/releases/download/\
        v{{ spt_release_num }}/spotify-tui-linux.tar.gz"
        dest: "{{ spt_install_path | default('/usr/local') }}/bin"
        remote_src: true
      become: '{{ not spt_dirstatus.stat.writeable | default(false) }}'

    - name: Ensure the Spotify-tui install path is in the system PATH.
      lineinfile:
        dest: '{{ item }}'
        line: "[[ \":$PATH:\" != *\":{{ spt_install_path |
        default('/usr/local') }}/bin:\"* ]] && export PATH=\"$PATH:\
        {{ spt_install_path | default('/usr/local') }}/bin\""
        state: present
        backup: false
      with_items:
        - ~/.profile
        - ~/.bashrc
        - ~/.zshenv
      failed_when: false

  when: >
    spt_curr_ver.rc !=0
    or (spt_desired_ver is defined
    and spt_current_ver is
    version(spt_desired_ver, '!=', version_type='strict'))
    or (update_apps is defined
    and ('all' in update_apps or 'spt' in update_apps
    or 'spotify' in update_apps or 'spotify-tui' in update_apps))
