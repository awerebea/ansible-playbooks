---
# Install Fzf

- name: Check Fzf version.
  shell: |
    set -o pipefail
    [ -f ~/.fzf.bash ] && source ~/.fzf.bash
    fzf --version | cut -d\  -f1
  args:
    executable: /usr/bin/bash
  changed_when: false
  failed_when: false
  register: fzf_curr_ver

- name: Filter current version stdout.
  set_fact:
    fzf_current_ver: '{{ fzf_curr_ver.stdout |
    regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: fzf_curr_ver.rc == 0

- name: Filter min Fzf version.
  set_fact:
    fzf_minimum_ver: '{{ fzf_min_ver |
    regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: fzf_min_ver is defined and fzf_ver is not defined

- name: Filter desired Fzf version.
  set_fact:
    fzf_desired_ver: '{{ fzf_ver |
    regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: fzf_ver is defined

- block:
    - block:
        - name: Clone Fzf repository from GitHub.
          git:
            repo: https://github.com/junegunn/fzf.git
            dest: ~/.fzf
            version: master

      rescue:
        - name: Remove local Fzf repo directory in case of cloning failure.
          file:
            path: ~/.fzf
            state: absent

        - name: Try to cleanly clone the Fzf repository after a failed attempt.
          git:
            repo: https://github.com/junegunn/fzf.git
            dest: ~/.fzf
            version: master

    - name: Define desired version in the install script.
      lineinfile:
        dest: ~/.fzf/install
        regexp: '^version='
        line: 'version={{ fzf_desired_ver }}'
        state: present
        backup: false
      when: fzf_desired_ver is defined

    - name: Install Fzf.
      command: ~/.fzf/install --all

  when: >
    fzf_curr_ver.rc !=0
    or (fzf_minimum_ver is defined and fzf_desired_ver is not defined
    and fzf_current_ver is version(fzf_minimum_ver, '<', version_type='strict'))
    or (fzf_desired_ver is defined
    and fzf_current_ver is
    version(fzf_desired_ver, '!=', version_type='strict'))
    or (update_apps is defined
    and ('all' in update_apps or 'fzf' in update_apps))
