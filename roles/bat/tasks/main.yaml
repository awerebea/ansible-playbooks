---
# Install Bat

- name: Check Bat version.
  shell: >
    set -o pipefail && bat --help | head -n1 |
    grep -Eo "[0-9]{1,}(\.[0-9]{1,}){0,}" | head -n1
  args:
    executable: /usr/bin/bash
  changed_when: false
  failed_when: false
  register: bat_curr_ver

- name: Filter current version stdout.
  set_fact:
    current_ver: '{{ bat_curr_ver.stdout |
      regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: bat_curr_ver.rc == 0

- name: Filter desired Bat version.
  set_fact:
    desired_ver: '{{ bat_ver | regex_search("[0-9]{1,}(\.[0-9]{1,}){0,2}") }}'
  when: bat_ver is defined

- block:
    - block:
        - name: Ensure pip3 is installed.
          apt:
            name: python3-pip
            state: present
          become: true

        - name: Ensure required python module is installed.
          pip:
            name: github3.py

        - name: Get latest release tag.
          community.general.github_release:
            user: sharkdp
            repo: bat
            action: latest_release
          register: latest_release

        - name: Filter release number.
          set_fact:
            latest_release_tag: '{{ latest_release.tag |
              regex_search("([0-9]{1,}\.)+[0-9]{1,}") }}'

      when: bat_ver is not defined

    - name: Define release number.
      set_fact:
        release_num: '{{ desired_ver if (desired_ver is defined)
          else latest_release_tag }}'

    - name: Define the name of the .deb package.
      set_fact:
        package_name: bat-musl_{{ release_num }}_amd64.deb
      when: release_num is version('0.2.3', '>=', version_type='strict')

    - name: Define the name of the .deb package.
      set_fact:
        package_name: bat_{{ release_num }}_amd64.deb
      when: release_num is version('0.2.3', '<', version_type='strict')

    - name: Install a .deb package from the internet.
      apt:
        deb: "https://github.com/sharkdp/bat/releases/download/\
          v{{ release_num }}/{{ package_name }}"
        force: true
      become: true

  when: >
    bat_curr_ver.rc !=0
    or (desired_ver is defined
    and current_ver is version(desired_ver, '!=', version_type='strict'))
    or (update_apps is defined
    and ('all' in update_apps or 'bat' in update_apps))
