---
# Install Docker-compose v2

- name: Check Docker-compose v2 version.
  shell: >
    set -o pipefail && docker compose version |
    grep -Eo "[0-9]{1,}(\.[0-9]{1,}){0,}" | head -n1
  args:
    executable: /usr/bin/bash
  changed_when: false
  failed_when: false
  register: compose_curr_ver

- block:
    - name: Import a variable containing a Bash script to compare versions.
      include_role:
        name: version-compare-function

    - name: Compare installed and desired Docker-compose versions.
      shell: |
        {{ ver_comp_func }}
        vercomp '{{ compose_curr_ver.stdout }}' '{{ docker_compose_ver }}'
      args:
        executable: /usr/bin/bash
      changed_when: false
      failed_when: false
      register: compare_result

  when: compose_curr_ver.rc == 0 and docker_compose_ver is defined

- block:
    - name: Ensure the /usr/libexec/docker/cli-plugins directory exists.
      file:
        path: /usr/libexec/docker/cli-plugins
        state: directory
        mode: 0755
      become: true

    - name: Set download URL.
      set_fact:
        defined_ver: 'download/{{ docker_compose_ver }}'
      when: docker_compose_ver is defined

    - name: Download Docker-compose binary.
      get_url:
        url: "https://github.com/docker/compose/releases/\
          {{ defined_ver | default('latest/download') }}/\
          docker-compose-linux-x86_64"
        dest: /usr/libexec/docker/cli-plugins/docker-compose
        mode: 0755
        force: true
      become: true

  when: >
    compose_curr_ver.rc !=0
    or (compare_result.rc is defined and compare_result.rc != 0)
    or (update_apps is defined
    and ('all' in update_apps or 'docker-compose' in update_apps
    or 'docker-compose-v2' in update_apps))
