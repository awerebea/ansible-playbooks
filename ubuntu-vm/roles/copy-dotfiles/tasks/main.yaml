---
- name: Rsync dotfiles (Zsh, Vim, Tmux).
  ansible.posix.synchronize:
    src: '{{ dotfiles_path }}/'
    dest: ~/
    archive: true
    checksum: true
    rsync_opts:
      - "--prune-empty-dirs"  # to sync only included files
      - "--include='.vimrc'"
      - "--include='.zshrc'"
      - "--include='.p10k.zsh'"
      - "--include='.tmux.conf'"
      - "--include='.tmux.conf.local'"
      - "--exclude='*'"       # to sync only included files
  register: result
  changed_when: >
    not result.stdout_lines == []
    and not (result.stdout_lines | length == 1
    and result.stdout_lines[0] == '.d..t...... ./')
  delegate_to: localhost

- name: Ensure the ~/.config/nvim directory exists.
  file:
    path: ~/.config/nvim
    state: directory
    mode: 0755

- name: Ensure the link to ~/.vimrc for Neovim exists.
  file:
    src: '~/.vimrc'
    dest: '~/.config/nvim/init.vim'
    state: link

- name: Rsync dotfiles (Ranger).
  ansible.posix.synchronize:
    src: '{{ dotfiles_path }}/ranger'
    dest: ~/.config/
    checksum: true
    recursive: true
    delete: true
    rsync_opts:
      - "--exclude='*.pyc'"
      - "--exclude='__init__.py'"
      - "--exclude='*/__pycache__'"
  register: ranger_files
  changed_when: >
    ranger_files.stdout_lines | length != 0
    and not (ranger_files.stdout_lines | length == 1
    and ranger_files.stdout_lines[0] == '.d..t...... ranger/plugins/')
  delegate_to: localhost

- block:
    - name: Ensure the ~/.local/bin directory exists.
      file:
        path: ~/.local/bin
        state: directory
        mode: 0755

    - name: Collect list of all Ranger scripts.
      find:
        paths: ~/.config/ranger/scripts/
      register: find

    - name: Ensure links to all Ranger scripts exist.
      file:
        src: '{{ item.path }}'
        path: '~/.local/bin/{{ item.path | basename }}'
        state: link
      with_items: '{{ find.files }}'
  when: ranger_files.changed
