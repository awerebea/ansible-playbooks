---
- name: Check user with key-based SSH access.
  command: ssh -q -o BatchMode=yes -o ConnectTimeout=3 \
    '{{ user_keybase }}@{{ ansible_host }}' "echo OK"
  delegate_to: localhost
  changed_when: false
  failed_when: false
  register: check_key_access_user

- name: DEBUG
  debug:
    var: check_key_access_user
  when: debug_mode is defined

- block:
    - include_tasks: vbox-guest-additions.yaml
      when: vbox_guest is defined

    - name: Create user.
      user:
        name: '{{ user_keybase }}'
        state: present
        system: false
        createhome: true
        home: '/home/{{ user_keybase }}'
        shell: /bin/bash
        password: "{{ pass_keybase | password_hash('sha512', 'mySalt') }}"
        update_password: on_create
        groups:   # add to group sudo to be able manage server
          - sudo
        append: true
      become: true

    - name: Allow new user to have passwordless sudo.
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^{{ user_keybase }}'
        line: '{{ user_keybase }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      become: true

    # INFO Localhost execution part
    - name: Ensure a local key pairs directory exists.
      file:
        path: '{{ ssh_keys_dir }}'
        state: directory
        mode: 0775
      delegate_to: localhost

    - name: Generate an SSH keypair with the default values (4096 bits, rsa).
      community.crypto.openssh_keypair:
        path: '{{ ssh_keys_dir }}/id_rsa_{{ inventory_hostname }}'
      delegate_to: localhost

    - name: Add SSH key to the local ~/.ssh/config file.
      lineinfile:
        path: ~/.ssh/config
        line: 'identityfile {{ ssh_keys_dir }}/id_rsa_{{ inventory_hostname }}'
        state: present
        create: true
        mode: 0644
        backup: true
      delegate_to: localhost

    # INFO Remote server part
    - name: Get key(s) to declare.
      set_fact:
        ssh_keys: "{{ ssh_keys | default([]) + [lookup('file', item)] }}"
      with_items:
        - '{{ ssh_keys_dir }}/id_rsa_{{ inventory_hostname }}.pub'

    - name: Declare authorized key(s) to the server.
      ansible.posix.authorized_key:
        user: '{{ user_keybase }}'
        state: present
        key: "{{ ssh_keys | join('\n') }}"
        path: '/home/{{ user_keybase }}/.ssh/authorized_keys'
        exclusive: true   # only this key allowed
      become: true

    - name: Make a user with key-based access the owner of his .ssh directory.
      file:
        path: '/home/{{ user_keybase }}/.ssh'
        state: directory
        recurse: true
        owner: '{{ user_keybase }}'
        group: '{{ user_keybase }}'
      become: true

    - name: Disable SSH root login.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: ^PermitRootLogin
        line: PermitRootLogin no
        state: present
        backup: true
      notify:
        - Restart SSH daemon.
      become: true

    - name: Disable SSH login with password.
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: ^PasswordAuthentication
        line: PasswordAuthentication no
        state: present
        backup: true
      notify:
        - Restart SSH daemon.
      become: true

    # To be able to connect to the server after restarting the ssh daemon.
    - name: 'Change current ansible remote user to {{ user_keybase }} before
        handler running.'
      set_fact:
        ansible_user: '{{ user_keybase }}'

  when: check_key_access_user.stdout != 'OK'
