---
# Install Neovim from sources

- name: Check Neovim version.
  shell: >
    set -o pipefail && nvim --version | head -n 1 |
    grep -Eo "[0-9]{1,}(\.[0-9]{1,}){0,}" | head -n1
  args:
    executable: /usr/bin/bash
  changed_when: false
  failed_when: false
  register: nvim_curr_ver

- block:
    - name: Import a variable containing a Bash script to compare versions.
      include_role:
        name: version-compare-function

    - name: Compare installed and min Neovim versions.
      shell: |
        {{ ver_comp_func }}
        vercomp '{{ nvim_curr_ver.stdout }}' '{{ nvim_min_ver }}'
      args:
        executable: /usr/bin/bash
      changed_when: false
      failed_when: false
      register: compare_min_result
      when: nvim_min_ver is defined and nvim_ver is not defined

    - name: Compare installed and desired Neovim versions.
      shell: |
        {{ ver_comp_func }}
        vercomp '{{ nvim_curr_ver.stdout }}' '{{ nvim_ver }}'
      args:
        executable: /usr/bin/bash
      changed_when: false
      failed_when: false
      register: compare_result
      when: nvim_ver is defined

  when: >
    nvim_curr_ver.rc == 0
    and (nvim_ver is defined or nvim_min_ver is defined)

- name: DEBUG
  debug:
    var: nvim_curr_ver
  when: debug_mode is defined

- block:
    - name: Ensure Neovim dependencies are installed.
      apt:
        name:
          - cmake
        state: present
      become: true

    - name: Ensure the ~/build directory exists.
      file:
        path: ~/build
        state: directory
        mode: 0755

    - block:
        - name: Clone Neovim repository from GitHub.
          git:
            repo: https://github.com/neovim/neovim.git
            dest: ~/build/neovim
            version: "{{ nvim_ver | default('master') }}"

      rescue:
        - name: Remove local Neovim repo directory in case of cloning failure.
          file:
            path: ~/build/neovim
            state: absent

        - name: >
            Try to cleanly clone the Neovim repository after a failed attempt.
          git:
            repo: https://github.com/neovim/neovim.git
            dest: ~/build/neovim
            version: "{{ nvim_ver | default('master') }}"

    - block:
        - name: Compile and install Neovim.
          shell: cd ~/build/neovim/ && make && sudo make install

      rescue:
        - name: 'Clean repository, compile and install Neovim if first apttempt
            was failed.'
          shell: cd ~/build/neovim/ && make clean && make && sudo make install

  when: >
    nvim_curr_ver.rc !=0
    or (compare_min_result.rc is defined and compare_min_result.rc == 2)
    or (compare_result.rc is defined and compare_result.rc != 0)
    or (update_apps is defined and ('all' in update_apps
    or 'nvim' in update_apps or 'neovim' in update_apps))
